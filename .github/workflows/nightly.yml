# This configuration is used for nightly builds
name: nightly

on:
  schedule:
    # Runs every Monday at 00:00
    - cron: 0 0 * * MON

jobs:
  nightly:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      # Checkout the git repository
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GPR_TOKEN }}
          fetch-depth: ""

      # Execute some necessary git commands to get more repository informations
      - name: post-checkout
        run: git fetch --prune --unshallow

      # Get currency project version
      - name: get-project-version
        id: get_project_version
        uses: avides/actions-project-version-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file-to-check: version.txt
          only-return-version: true

      # Build docker image
      - name: build-image
        env:
          PROJECT_VERSION: ${{ steps.get_project_version.outputs.version }}
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/${GITHUB_REPOSITORY}:${PROJECT_VERSION} -t ${{ secrets.DOCKER_REGISTRY }}/${GITHUB_REPOSITORY}:latest .

      # Setup the sonar analyse scanner
      - name: setup-sonar
        uses: warchant/setup-sonar-scanner@v3

        # Execute sonar analysis for current branch
      - name: sonar-analyse
        env:
          SONAR_HOST: ${{ secrets.OS_SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.OS_SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export SONAR_ORGANIZATION=$(echo ${GITHUB_REPOSITORY} | cut -d / -f 1)
          sonar-scanner \
            -Dsonar.host.url=${SONAR_HOST} \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.organization=${SONAR_ORGANIZATION} \
            -Dsonar.projectKey=${GITHUB_REPOSITORY//\//_} \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \
            -Dsonar.pullrequest.github.repository=${GITHUB_REPOSITORY} \
            -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
